#tag ClassProtected Class Group	#tag Method, Flags = &h0		Sub Constructor(name as String, xPlaneFolder as XPlaneFolderItem)		  pName = name		  pXPlaneFolder = xPlaneFolder		  		  me.loadState()		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub loadState()		  // The individual addon's Dictionary is always stored using the addon name as the key		  dim groupDictionary as Dictionary = pXPlaneFolder.getPreferencesDictionary(kPreferencesKey, me.pName)		  		  me.retrieveStateFromDictionary(groupDictionary)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub saveState()		  // The individual addon's Dictionary is always stored using the addon name as the key		  dim groupDictionary as Dictionary = pXPlaneFolder.getPreferencesDictionary(kPreferencesKey, me.pName)		  		  me.storeStateToDictionary(groupDictionary)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub retrieveStateFromDictionary(state as Dictionary)		  // Set up the state of the class from a Dictionary		  		  if (not state.hasKey(kPreferencesKeyCSLsDisabled)) then state.value(kPreferencesKeyCSLsDisabled) = new Collection()		  pCSLsDisabled = state.value(kPreferencesKeyCSLsDisabled)		  		  if (not state.hasKey(kPreferencesKeyCSLsEnabled)) then state.value(kPreferencesKeyCSLsEnabled) = new Collection()		  pCSLsEnabled = state.value(kPreferencesKeyCSLsEnabled)		  		  if (not state.hasKey(kPreferencesKeyPluginsDisabled)) then state.value(kPreferencesKeyPluginsDisabled) = new Collection()		  pPluginsDisabled = state.value(kPreferencesKeyPluginsDisabled)		  		  if (not state.hasKey(kPreferencesKeyPluginsEnabled)) then state.value(kPreferencesKeyPluginsEnabled) = new Collection()		  pPluginsEnabled = state.value(kPreferencesKeyPluginsEnabled)		  		  if (not state.hasKey(kPreferencesKeySceneryPackagesDisabled)) then state.value(kPreferencesKeySceneryPackagesDisabled) = new Collection()		  pSceneryPackagesDisabled = state.value(kPreferencesKeySceneryPackagesDisabled)		  		  if (not state.hasKey(kPreferencesKeySceneryPackagesEnabled)) then state.value(kPreferencesKeySceneryPackagesEnabled) = new Collection()		  pSceneryPackagesEnabled = state.value(kPreferencesKeySceneryPackagesEnabled)		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub storeStateToDictionary(state as Dictionary)		  // Store the state for the group in a Dictionary		  		  state.value(kPreferencesKeyCSLsDisabled) = pCSLsDisabled		  state.value(kPreferencesKeyCSLsEnabled) = pCSLsEnabled		  state.value(kPreferencesKeyPluginsDisabled) = pPluginsDisabled		  state.value(kPreferencesKeyPluginsEnabled) = pPluginsEnabled		  state.value(kPreferencesKeySceneryPackagesDisabled) = pSceneryPackagesDisabled		  state.value(kPreferencesKeySceneryPackagesEnabled) = pSceneryPackagesEnabled		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Destructor()		  saveState()		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub populatePopupMenuEntry(popupMenu as PopupMenu)		  popupMenu.AddRow(pName)		  popupMenu.rowTag(popupMenu.listCount - 1) = me		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		 Shared Function getGroups(xPlaneFolder as XPlaneFolderItem) As Group()		  dim groupsContainerDictionary as Dictionary = xPlaneFolder.getPreferencesContainerDictionary(kPreferencesKey)		  dim i as Integer		  dim result() as Group		  		  for each key as string in groupsContainerDictionary.keys()		    dim group as Group = new Group(key, xPlaneFolder)		    result.append(group)		  next		  		  return result		End Function	#tag EndMethod	#tag Method, Flags = &h0		 Shared Sub deleteGroup(groupName as String, xPlaneFolder as XPlaneFolderItem)		  xPlaneFolder.deletePreferencesDictionary(kPreferencesKey, groupName)		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected pSceneryPackagesEnabled As Collection	#tag EndProperty	#tag Property, Flags = &h1		Protected pPluginsDisabled As Collection	#tag EndProperty	#tag Property, Flags = &h1		Protected pCSLsEnabled As Collection	#tag EndProperty	#tag Property, Flags = &h1		Protected pCSLsDisabled As Collection	#tag EndProperty	#tag Property, Flags = &h1		Protected pPluginsEnabled As Collection	#tag EndProperty	#tag Property, Flags = &h1		Protected pSceneryPackagesDisabled As Collection	#tag EndProperty	#tag Property, Flags = &h0		pName As String	#tag EndProperty	#tag Property, Flags = &h1		Protected pXPlaneFolder As XPlaneFolderItem	#tag EndProperty	#tag Constant, Name = kPreferencesKey, Type = String, Dynamic = False, Default = \"groups", Scope = Private	#tag EndConstant	#tag Constant, Name = kPreferencesKeyCSLsEnabled, Type = String, Dynamic = False, Default = \"csls_enabled", Scope = Private	#tag EndConstant	#tag Constant, Name = kPreferencesKeyCSLsDisabled, Type = String, Dynamic = False, Default = \"csls_disabled", Scope = Private	#tag EndConstant	#tag Constant, Name = kPreferencesKeyPluginsDisabled, Type = String, Dynamic = False, Default = \"plugins_disabled", Scope = Private	#tag EndConstant	#tag Constant, Name = kPreferencesKeyPluginsEnabled, Type = String, Dynamic = False, Default = \"plugins_enabled", Scope = Private	#tag EndConstant	#tag Constant, Name = kPreferencesKeySceneryPackagesDisabled, Type = String, Dynamic = False, Default = \"scenery_packages_disabled", Scope = Private	#tag EndConstant	#tag Constant, Name = kPreferencesKeySceneryPackagesEnabled, Type = String, Dynamic = False, Default = \"scenery_packages_enabled", Scope = Private	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass