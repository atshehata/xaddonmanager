#tag ClassProtected Class AircraftInherits AddOn	#tag Method, Flags = &h0		 Shared Function isValid(folderItem as FolderItem) As boolean		  // Method 1: It's a valid aircraft if it's a directory and has a file with a .acf extension in it		  if not folderItem.Directory then return false		  		  dim i as integer		  for i = 1 to folderItem.count		    if folderItem.trueItem(i).name.right(4) = ".acf" then return true		  next		  		  return false		  		  // Method 2: It's a valid aircraft if it has a ".afc" extension		  'return folderItem.name.right(4) = ".acf"		End Function	#tag EndMethod	#tag Method, Flags = &h0		 Shared Sub install(folderItem as FolderItem, destinationFolderItem as FolderItem)		  // Check whether an item with the same name exists first		  if destinationFolderItem.child(folderItem.name).exists then		    dim parameters() as string = array(folderItem.name)		    msgBox(App.processParameterizedString(wndMain.kErrorItemWithSameNameExists, parameters))		    return		  end if		  		  // Move the folder		  folderItem.moveFileTo(destinationFolderItem)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub populateListBoxEntry(listBox as ListBox)		  // Part of the AddonInterface interface.		  super.populateListBoxEntry(listBox)		  		  if has3dCockpit() then		    listBox.cell(listBox.lastIndex, 1) = "✓"		  end if		  if hasAirfoils() then		    listBox.cell(listBox.lastIndex, 2) = "✓"		  end if		  if hasSounds() then		    listBox.cell(listBox.lastIndex, 3) = "✓"		  end if		  if hasWeapons() then		    listBox.cell(listBox.lastIndex, 4) = "✓"		  end if		  if hasPlugins() then		    listBox.cell(listBox.lastIndex, 5) = "✓"		  end if		  if goodwayEnabled() then		    listBox.cell(listBox.lastIndex, 6) = "✓"		  end if		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(name as String, folderItem as FolderItem, enabled as Boolean)		  // Calling the overridden superclass constructor.		  Super.Constructor(name, folderItem, enabled)		  		  // Method 1: The Aircraft refers to a folder containing a .afc		  dim i as integer		  for i = 1 to folderItem.count		    if folderItem.trueItem(i).name.right(4) = ".acf" then		      pAircraftFolderItem = folderItem.trueItem(i)		      pAcfStem = pAircraftFolderItem.name.left(pAircraftFolderItem.name.len() - 4)		      		      dim iconFolderItem as FolderItem = folderItem.child(pAcfStem + "_icon.png")		      if iconFolderItem.exists() then		        pIconPicture = iconFolderItem.openAsPicture		      else		        iconFolderItem = folderItem.child("plane.jpg")		        if iconFolderItem.exists() then		          pIconPicture = iconFolderItem.openAsPicture		        end if		      end if		    end if		  next		  		  // Method 2: The Aircraft refers to the .acf file		  'dim stem as String = pFolderItem.name.left(pFolderItem.name.len() - 4)		  'dim iconFolderItem as FolderItem = folderItem.parent.child(stem + "_icon.png")		  'if iconFolderItem.exists() then pIconPicture = iconFolderItem.openAsPicture		  		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub displayDetails(iconCanvas as Canvas)		  if pIconPicture <> nil then		    iconCanvas.backdrop = newPicture(iconCanvas.width, iconCanvas.height, 32)		    iconCanvas.backdrop.graphics.drawPicture(pIconPicture, 0, 0, iconCanvas.width, iconCanvas.height, 0, 0, pIconPicture.width, pIconPicture.height)		  else		    iconCanvas.backdrop = newPicture(1, 1, 1)		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function hasSounds() As Boolean		  return pFolderItem.child("sounds").exists() or pFolderItem.child("Sounds").exists()		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function hasAirfoils() As Boolean		  return pFolderItem.child("airfoils").exists() or pFolderItem.child("Airfoils").exists()		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function has3dCockpit() As Boolean		  return pFolderItem.child(pAcfStem + "_cockpit.obj").exists() or _		  pFolderItem.child(pAcfStem + "_COCKPIT.obj").exists() or _		  pFolderItem.child(pAcfStem + "_cockpit_INN.obj").exists() or _		  pFolderItem.child(pAcfStem + "_COCKPIT_INN.obj").exists() or _		  pFolderItem.child(pAcfStem + "_cockpit_OUT.obj").exists() or _		  pFolderItem.child(pAcfStem + "_COCKPIT_OUT.obj").exists()		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function hasWeapons() As Boolean		  return pFolderItem.child("weapons").exists() or pFolderItem.child("Weapons").exists()		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function hasPlugins() As Boolean		  return pFolderItem.child("plugins").exists() or pFolderItem.child("Plugins").exists()		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function goodwayEnabled() As Boolean		  return pFolderItem.child("plane.txt").exists()		End Function	#tag EndMethod	#tag Property, Flags = &h0		pIconPicture As Picture	#tag EndProperty	#tag Property, Flags = &h0		pAircraftFolderItem As FolderItem	#tag EndProperty	#tag Property, Flags = &h0		pAcfStem As String	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="pEnabled"			Group="Behavior"			InitialValue="true"			Type="Boolean"			InheritedFrom="AddOn"		#tag EndViewProperty		#tag ViewProperty			Name="pName"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"			InheritedFrom="AddOn"		#tag EndViewProperty		#tag ViewProperty			Name="pIconPicture"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="pAcfStem"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass